pipeline {
    agent any

    parameters {
        string(name: 'IMAGE_TAG', defaultValue: 'latest', description: 'Tag of the Docker image to deploy')
        string(name: 'GIT_TOKEN_CREDENTIALS_ID', defaultValue: '3aa5b976-a8a1-4c9d-abb5-5241f0778707', description: 'Git Token Credentials ID')
        string(name: 'REPO_URL', defaultValue: 'https://github.com/karimelhou/helloworld.git', description: 'Repository URL')
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: 'Branch Name')
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    git credentialsId: params.GIT_TOKEN_CREDENTIALS_ID, url: params.REPO_URL, branch: params.BRANCH_NAME
                }
            }
        }

        stage('Update Manifest') {
            steps {
                script {
                    sh "sed -i 's/karimelhou\\/mydocker:.*/karimelhou\\/mydocker:${params.IMAGE_TAG}/' k8s-manifest.yaml"
                }
            }
        }

        stage('Commit and Push Changes') {
    steps {
        script {
            // Commit changes
            gitAdd = sh(script: 'git add k8s-manifest.yaml', returnStatus: true)
            if (gitAdd != 0) {
                error("Failed to add changes to Git.")
            }

            gitCommit = sh(script: 'git commit -m "Update image tag to ${params.IMAGE_TAG}"', returnStatus: true)
            if (gitCommit != 0) {
                error("Failed to commit changes to Git.")
            }

            // Use the Git Publisher plugin to push changes
            step([$class: 'GitPublisher', 
                tags: true, 
                notes: 'Pushing changes via Jenkins', 
                pushMerge: false, 
                forcePush: true, 
                gitoid: '', 
                repositories: [[
                    repositoryName: params.REPO_URL, 
                    branches: [[
                        name: params.BRANCH_NAME, 
                        credentialsId: params.GIT_TOKEN_CREDENTIALS_ID
                    ]]
                ]]
            ])
        }
    }
}

    }
}
